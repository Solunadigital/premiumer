apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'
apply plugin: 'checkstyle'

def isCi = 'true'.equals(System.getenv('CI'))

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.2"

  defaultConfig {
    minSdkVersion 9
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/master/gradle-mvn-push.gradle'

dependencies {
  compile 'com.android.support:support-annotations:25.1.0'
  testCompile "org.robolectric:robolectric:3.2.2"
  testCompile "org.mockito:mockito-core:2.6.8"
  testCompile "com.google.truth:truth:0.31"
}

task checkCodingStyle(type: Checkstyle) {
  description 'Runs Checkstyle inspection against Android sourcesets.'
  group = 'Code Quality'
  ignoreFailures = false
  showViolations = false
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'
  exclude '**/R.java'
  exclude '**/BuildConfig.java'
  reports {
    xml.destination "$project.buildDir/reports/checkstyle/report.xml"
  }
  classpath = files()
  configFile = file("${rootProject.rootDir}/config/checkstyle/checkstyle.xml")
}

if (isCi) {
  build.finalizedBy([checkCodingStyle, jacocoTestReport])
}
